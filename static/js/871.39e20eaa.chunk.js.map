{"version":3,"file":"static/js/871.39e20eaa.chunk.js","mappings":"yNA0CA,UArCgB,WACd,OAAoDA,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAFY,wCAIpB,WAA+BE,GAA/B,yFACyBC,EAAAA,EAAAA,IAAA,6CACiBD,EADjB,4EADzB,OACQE,EADR,OAIQC,EAAeD,EAASE,KAAKC,QACnCR,EAAsBM,GALxB,4CAJoB,sBAgBpB,OAJAG,EAAAA,EAAAA,YAAU,YAZU,oCAalBC,CAAgBT,EAEjB,GAAE,KAED,wBACGF,EAAmBY,OAClBZ,EAAmBa,KAAI,SAAAC,GAAM,OAC3B,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOV,GADW,KAO7B,4EAIP,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\n\nconst Reviews = () => {\n  const [actualMovieReviews, setActualMovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  async function getMovieReviews(id) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=0943ad551b04628807de14e8fdbef059&language=en-US&page=1`\n    );\n    const reviewsArray = response.data.results;\n    setActualMovieReviews(reviewsArray);\n  }\n\n  useEffect(() => {\n    getMovieReviews(movieId);\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <ul>\n      {actualMovieReviews.length ? (\n        actualMovieReviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <p>Sorry, no reviews are available for this movie.</p>\n      )}\n    </ul>\n  );\n};\n\nReviews.propTypes = {\n  getMovieReviews: PropTypes.func,\n  movieReviews: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Reviews;\n"],"names":["useState","actualMovieReviews","setActualMovieReviews","movieId","useParams","id","axios","response","reviewsArray","data","results","useEffect","getMovieReviews","length","map","review","author","content"],"sourceRoot":""}