{"version":3,"file":"static/js/881.90572076.chunk.js","mappings":"oOACA,EAA+B,6BAA/B,EAA0E,4BAA1E,EAAmH,2BAAnH,EAAmK,mCAAnK,EAA+M,uBAA/M,EAAkP,0BAAlP,EAAyR,2B,0BCqFzR,EAhFe,WACb,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAcF,EAAaG,IAAI,SANlB,SAiBJC,EAjBI,0EAiBnB,WAAiCC,GAAjC,uFACyBC,EAAAA,EAAAA,IAAA,kHACsFD,EADtF,gCADzB,OACQE,EADR,OAIET,EAAkBS,EAASC,KAAKC,SAChCR,EAAgB,CAAEI,MAAOA,IAL3B,4CAjBmB,sBAiCnB,OA1BAK,EAAAA,EAAAA,YAAU,WACY,OAAhBR,GAAsBE,EAAkBF,EAE7C,GAAE,KAwBD,iCACE,kBAAMS,SATV,SAAsBC,GACpBA,EAAMC,iBAENT,EADcQ,EAAME,OAAOC,SAASC,UAAUC,OAE9CL,EAAME,OAAOC,SAASC,UAAUC,MAAQ,EACzC,EAIiCC,UAAWC,EAAzC,WACE,kBAAOD,UAAWC,EAAiBC,KAAK,eACxC,mBAAQF,UAAWC,EAAkBE,KAAK,SAA1C,uBAMDxB,EAAeyB,QAGd,eAAIJ,UAAWC,EAAf,SACGtB,EAAe0B,KAAI,SAAAC,GAAK,OACvB,yBACE,UAAC,KAAD,CACEC,MAAO,CAAEC,KAAK,iBAAD,OAAmBxB,IAChCgB,UAAWC,EACXQ,GAAE,kBAAaH,EAAMI,IAHvB,WAKE,gBACEC,QAAQ,OACRX,UAAWC,EACXW,IACIN,EAAMO,YAAR,yCACsCP,EAAMO,aAD5C,yHAIFC,IAAG,oBAAeR,EAAMS,UAE1B,cAAGf,UAAWC,EAAd,SAA+BK,EAAMS,YAhBhCT,EAAMI,GADQ,OAH3B,2FA4BP,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchButton\":\"Movies_searchButton__ieSHM\",\"searchInput\":\"Movies_searchInput__8fq2n\",\"moviesForm\":\"Movies_moviesForm__Yo2Oo\",\"searchedMoviesList\":\"Movies_searchedMoviesList__ZXXYs\",\"poster\":\"Movies_poster__Yc3Qb\",\"movieLink\":\"Movies_movieLink__ERyJ6\",\"movieTitle\":\"Movies_movieTitle__lz38M\"};","import React, { useEffect, useState } from 'react';\nimport css from './Movies.module.css';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  // const [shouldLoadSearchedMovies, setShouldLoadSearchedMovies] = useState(false)\n  const [searchParams, setSearchParams] = useSearchParams();\n\n\n  const paramsQuery = searchParams.get('query');\n  useEffect(() => {\n    if (paramsQuery !== null) getSearchedMovies(paramsQuery);\n    // eslint-disable-next-line\n  }, []);\n\n  // function clearMoviesPage() {\n  //   setSearchedMovies([]);\n  //   setShouldLoadSearchedMovies(false);\n  // }\n\n  async function getSearchedMovies(query) {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=0943ad551b04628807de14e8fdbef059&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n    setSearchedMovies(response.data.results);\n    setSearchParams({ query: query });\n    // setShouldLoadSearchedMovies(true);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const query = event.target.elements.movieName.value;\n    getSearchedMovies(query);\n    event.target.elements.movieName.value = '';\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={css.moviesForm}>\n        <input className={css.searchInput} name=\"movieName\" />\n        <button className={css.searchButton} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {\n      // shouldLoadSearchedMovies && \n      !searchedMovies.length ? (\n        <p>Sorry, we don't have any movies matching the search criteria.</p>\n      ) : (\n        <ul className={css.searchedMoviesList}>\n          {searchedMovies.map(movie => (\n            <li key={movie.id}>\n              <Link\n                state={{ from: `/movies?query=${paramsQuery}` }}\n                className={css.movieLink}\n                to={`/movies/${movie.id}`}\n              >\n                <img\n                  loading=\"lazy\"\n                  className={css.poster}\n                  src={\n                    !!movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : `https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png`\n                  }\n                  alt={`Poster of ${movie.title}`}\n                />\n                <p className={css.movieTitle}>{movie.title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMovies.propTypes = {\n  getSearchedMovies: PropTypes.func,\n  searchedMovies: PropTypes.arrayOf(PropTypes.object),\n  shouldLoadSearchedMovies: PropTypes.bool,\n};\n\nexport default Movies;\n"],"names":["useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","paramsQuery","get","getSearchedMovies","query","axios","response","data","results","useEffect","onSubmit","event","preventDefault","target","elements","movieName","value","className","css","name","type","length","map","movie","state","from","to","id","loading","src","poster_path","alt","title"],"sourceRoot":""}